/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import logika.Kontroler;
import model.Artikal;
import model.StavkaZapisnika;
import model.Zapisnik_o_Sortiranju;
import tabele.TabelaStavkeZapisnika;

/**
 *
 * @author Ana
 */
public class FormaStavkaZapisnikaOSortiranjuDodaj extends javax.swing.JFrame {

    /**
     * Creates new form FormaStavkaZapisnikaOSortiranjuDodaj
     */
    FormaStavkaZapisnikaOSortiranju parent;
    String operacija;
    StavkaZapisnika sz;
    Zapisnik_o_Sortiranju z;
    int brojStavke;
    public FormaStavkaZapisnikaOSortiranjuDodaj(FormaStavkaZapisnikaOSortiranju parent, boolean modal, StavkaZapisnika sz, String operacija, Zapisnik_o_Sortiranju z,int brojStavke) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.parent=parent;
        this.sz=sz;
        this.operacija=operacija;
        this.z=z;
        this.brojStavke=brojStavke;
        if(operacija.equals("UPDATE")){
            podesiPolja(sz);
            txtZapisnik.setText(String.valueOf(sz.getZapisnik().getZapisnikID()));
            txtZapisnik.setEnabled(false);
            
            txtRedniBroj.setEnabled(false);
        }else if(operacija.equals("INSERT")){
            txtZapisnik.setText(String.valueOf(z.getZapisnikID()));
            txtZapisnik.setEnabled(false);
            int brSt=brojStavke+1;
            txtRedniBroj.setText(String.valueOf(brSt));
            txtRedniBroj.setEnabled(false);
        }
        popuniCmb(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtZapisnik = new javax.swing.JTextField();
        txtRedniBroj = new javax.swing.JTextField();
        txtKolicina = new javax.swing.JTextField();
        txtCena = new javax.swing.JTextField();
        cmbArtikal = new javax.swing.JComboBox();
        btnSacuvaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Stavka zapisnika o sortiranju");

        jLabel1.setText("Zapisnik:");

        jLabel2.setText("Redni broj:");

        jLabel3.setText("Kolicina:");

        jLabel4.setText("Cena:");

        jLabel5.setText("Artikal:");

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSacuvaj)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtZapisnik)
                            .addComponent(txtRedniBroj)
                            .addComponent(txtKolicina)
                            .addComponent(txtCena)
                            .addComponent(cmbArtikal, 0, 384, Short.MAX_VALUE))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtZapisnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtRedniBroj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbArtikal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(btnSacuvaj)
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        try {
            if(this.operacija.equals("INSERT")){
                this.insert();
                
            }else if(this.operacija.equals("UPDATE")){
                this.update();
                
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormaStavkaZapisnikaOSortiranjuDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormaStavkaZapisnikaOSortiranjuDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormaStavkaZapisnikaOSortiranjuDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormaStavkaZapisnikaOSortiranjuDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new FormaStavkaZapisnikaOSortiranjuDodaj().setVisible(true);
            }
        });
    }

    private void podesiPolja(StavkaZapisnika sz) {
        txtKolicina.setText(String.valueOf(sz.getKolicina()));
        txtCena.setText(String.valueOf(sz.getCena()));
        cmbArtikal.setSelectedItem(sz.getArtikal());
        txtRedniBroj.setText(String.valueOf(sz.getRedniBroj()));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox cmbArtikal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtCena;
    private javax.swing.JTextField txtKolicina;
    private javax.swing.JTextField txtRedniBroj;
    private javax.swing.JTextField txtZapisnik;
    // End of variables declaration//GEN-END:variables

    private void popuniCmb() {
        try {
            cmbArtikal.removeAllItems();
            List<Artikal> listaArt=Kontroler.getInstanca().listaArtikala();
            for (Artikal a : listaArt) {
                cmbArtikal.addItem(a);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            ex.getMessage();
        }
    }

    private void insert() throws Exception {
        if(txtKolicina.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Kolicina je obavezno polje!");
            return;
        }
        if(txtCena.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Cena je obavezno polje!");
            return;
        }
        
        String redniBroj=txtRedniBroj.getText();
        int rb=Integer.parseInt(redniBroj);
        
        String kolicina=txtKolicina.getText();
        double kol=Double.parseDouble(kolicina);
        
        String cena=txtCena.getText();
        double c=Double.parseDouble(cena);
        
        Artikal art=(Artikal) cmbArtikal.getSelectedItem();
        
        StavkaZapisnika stav=new StavkaZapisnika(z, rb, kol, c, art);
        Kontroler.getInstanca().insertWithAutoincrement(stav);
        JOptionPane.showMessageDialog(this, "Stavka zapisnika o sortiranju je uspesno dodata");
        
        this.dispose();
        parent.dispose();
        new FormaStavkaZapisnikaOSortiranju(z).setVisible(true);
    }

    private void update() throws Exception {
        if(txtKolicina.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Kolicina je obavezno polje!");
            return;
        }
        if(txtCena.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Cena je obavezno polje!");
            return;
        }
        
        String redniBroj=txtRedniBroj.getText();
        int rb=Integer.parseInt(redniBroj);
        
        String kolicina=txtKolicina.getText();
        double kol=Double.parseDouble(kolicina);
        
        String cena=txtCena.getText();
        double c=Double.parseDouble(cena);
        
        Artikal art=(Artikal) cmbArtikal.getSelectedItem();
        
        StavkaZapisnika stav=new StavkaZapisnika(z, rb, kol, c, art);
        Kontroler.getInstanca().update(stav);
        JOptionPane.showMessageDialog(this, "Stavka zapisnika o sortiranju je uspesno izmenjena");
        
        this.dispose();
        parent.dispose();
        new FormaStavkaZapisnikaOSortiranju(z).setVisible(true);
    }
    
}
