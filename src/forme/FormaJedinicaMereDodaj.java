/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import logika.Kontroler;
import model.Jedinica_Mere;

/**
 *
 * @author Ana
 */
public class FormaJedinicaMereDodaj extends javax.swing.JFrame {

    /**
     * Creates new form FormaJedinicaMereDodaj
     */
    FormaJedinicaMere parent;
    String operacija;
    Jedinica_Mere jm;
    int brojJM;
    public FormaJedinicaMereDodaj(FormaJedinicaMere parent, boolean modal, Jedinica_Mere jm, String operacija, int brojJM) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.parent=parent;
        this.jm=jm;
        this.operacija=operacija;
        this.brojJM=brojJM;
        if(operacija.equals("UPDATE")){
            podesiPolja(jm);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNaziv = new javax.swing.JTextField();
        txtSkracenica = new javax.swing.JTextField();
        btnSacuvaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Jedinica mere");

        jLabel1.setText("Naziv:");

        jLabel2.setText("Skracenica:");

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNaziv)
                            .addComponent(txtSkracenica, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSacuvaj)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSkracenica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(btnSacuvaj)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        try {
            if(this.operacija.equals("INSERT")){
                this.insert();
                
            }else if(this.operacija.equals("UPDATE")){
                this.update();
                
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormaJedinicaMereDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormaJedinicaMereDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormaJedinicaMereDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormaJedinicaMereDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new FormaJedinicaMereDodaj().setVisible(true);
            }
        });
    }

    private void podesiPolja(Jedinica_Mere jm) {
        this.txtNaziv.setText(jm.getNazivJediniceMere());
        this.txtSkracenica.setText(jm.getSkracenica());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtNaziv;
    private javax.swing.JTextField txtSkracenica;
    // End of variables declaration//GEN-END:variables

    private void insert() throws Exception {
        if(txtNaziv.getText().isEmpty() || txtSkracenica.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Sva polja su obavezna i moraju biti popunjena!");
            return;
        }
        
        String naziv=txtNaziv.getText();
        String skr=txtSkracenica.getText();
        
        int br=brojJM+1;
        
        Jedinica_Mere jedm=new Jedinica_Mere(br, naziv, skr);
        Kontroler.getInstanca().insertWithAutoincrement(jedm);
        JOptionPane.showMessageDialog(this, "Jedinica mere je uspesno dodata");
        parent.refreshTbl();
        this.setVisible(false);
        dispose();
    }

    private void update() throws Exception {
        if(txtNaziv.getText().isEmpty() || txtSkracenica.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Sva polja su obavezna i moraju biti popunjena!");
            return;
        }
        String naziv=txtNaziv.getText();
        String skr=txtSkracenica.getText();
        Jedinica_Mere jedm=new Jedinica_Mere(jm.getSifraJediniceMere(), naziv, skr);
        Kontroler.getInstanca().update(jedm);
        JOptionPane.showMessageDialog(this, "Jedinica mere je uspesno izmenjena");
        parent.refreshTbl();
        this.setVisible(false);
        dispose();
    }
}
