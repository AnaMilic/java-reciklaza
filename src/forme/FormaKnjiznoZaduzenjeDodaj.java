/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import logika.Kontroler;
import model.Dobavljac;
import model.Knjizno_Zaduzenje;
import model.Kupac;
import model.Radnik;

/**
 *
 * @author Ana
 */
public class FormaKnjiznoZaduzenjeDodaj extends javax.swing.JFrame {

    /**
     * Creates new form FormaKnjiznoZaduzenjeDodaj
     */
    FormaKnjiznoZaduzenje parent;
    Knjizno_Zaduzenje kz;
    String operacija;
    List<Knjizno_Zaduzenje> listaKZ;
    public FormaKnjiznoZaduzenjeDodaj(FormaKnjiznoZaduzenje parent, boolean modal, Knjizno_Zaduzenje kz, String operacija,List<Knjizno_Zaduzenje> listaKZ) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.kz=kz;
        this.parent=parent;
        this.operacija=operacija;
        this.listaKZ=listaKZ;
        if(operacija.equals("UPDATE")){
            podesiPolja(kz);
        }else if(operacija.equals("INSERT")){
           txtNazivDobavljaca.setEnabled(false);
        }
        popuniCmb();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmbDobavljac = new javax.swing.JComboBox();
        cmbKupac = new javax.swing.JComboBox();
        txtBrzaduzenja = new javax.swing.JTextField();
        txtDatumIzd = new javax.swing.JTextField();
        txtMestoIzd = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNapomena = new javax.swing.JTextArea();
        cmbRadnik = new javax.swing.JComboBox();
        btnSacuvaj = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtNazivDobavljaca = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Knjizno zaduzenje");

        jLabel1.setText("Dobavljac:");

        jLabel2.setText("Kupac:");

        jLabel3.setText("Broj zaduzenja:");

        jLabel4.setText("Datum izdavanja:");

        jLabel5.setText("Mesto izdavanja:");

        jLabel6.setText("Napomena:");

        jLabel7.setText("Radnik:");

        txtNapomena.setColumns(20);
        txtNapomena.setRows(5);
        jScrollPane1.setViewportView(txtNapomena);

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        jLabel8.setText("Naziv dobavljaca:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSacuvaj)
                            .addComponent(txtNazivDobavljaca, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(39, 39, 39))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(73, 73, 73)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbDobavljac, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbKupac, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtBrzaduzenja)
                            .addComponent(txtDatumIzd)
                            .addComponent(txtMestoIzd)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                            .addComponent(cmbRadnik, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbDobavljac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbKupac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtBrzaduzenja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDatumIzd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtMestoIzd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbRadnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtNazivDobavljaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(btnSacuvaj)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        try {
            if(this.operacija.equals("INSERT")){
                this.insert();
                
            }else if(this.operacija.equals("UPDATE")){
                this.update();
                
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormaKnjiznoZaduzenjeDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormaKnjiznoZaduzenjeDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormaKnjiznoZaduzenjeDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormaKnjiznoZaduzenjeDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new FormaKnjiznoZaduzenjeDodaj().setVisible(true);
            }
        });
    }

    private void popuniCmb() {
        try {
            cmbDobavljac.removeAllItems();
            List<Dobavljac> listaD=Kontroler.getInstanca().listaDobavljaca();
            for (Dobavljac dobavljac : listaD) {
                cmbDobavljac.addItem(dobavljac);
            }
            
            cmbKupac.removeAllItems();
            List<Kupac> listaK=Kontroler.getInstanca().listaKupaca();
            for (Kupac kupac : listaK) {
                cmbKupac.addItem(kupac);
            }
            
            cmbRadnik.removeAllItems();
            List<Radnik> listaR=Kontroler.getInstanca().listaRadnika();
            for (Radnik radnik : listaR) {
                cmbRadnik.addItem(radnik);
            }
        } catch (Exception ex) {
            Logger.getLogger(FormaKnjiznoZaduzenjeDodaj.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void podesiPolja(Knjizno_Zaduzenje kz) {
        this.cmbDobavljac.setSelectedItem(kz.getDobavljac());
        this.cmbDobavljac.setEnabled(false);
        this.cmbKupac.setSelectedItem(kz.getKupac());
        this.cmbKupac.setEnabled(false);
        this.cmbRadnik.setSelectedItem(kz.getRadnik());
        this.txtBrzaduzenja.setText(String.valueOf(kz.getBrojZaduzenja()));
        this.txtBrzaduzenja.setEnabled(false);
        this.txtMestoIzd.setText(kz.getMestoIzdavanja());
        this.txtNapomena.setText(kz.getNapomena());
        this.txtDatumIzd.setText(String.valueOf(kz.getDatumIzdavanja()));
        
        
        this.txtNazivDobavljaca.setText(kz.getDobavljac().getNazivDobavljaca());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox cmbDobavljac;
    private javax.swing.JComboBox cmbKupac;
    private javax.swing.JComboBox cmbRadnik;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtBrzaduzenja;
    private javax.swing.JTextField txtDatumIzd;
    private javax.swing.JTextField txtMestoIzd;
    private javax.swing.JTextArea txtNapomena;
    private javax.swing.JTextField txtNazivDobavljaca;
    // End of variables declaration//GEN-END:variables

    private void insert() throws Exception {
        if(txtBrzaduzenja.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Broj zaduzenja je obavezno polje!");
            return;
        }
        if(txtDatumIzd.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Datum izdavanja je obavezno polje!");
            return;
        }
        
        Dobavljac d=(Dobavljac) cmbDobavljac.getSelectedItem();
        Kupac k=(Kupac) cmbKupac.getSelectedItem();
        
        
        for (Knjizno_Zaduzenje knjizno_Zaduzenje : listaKZ) {
            if(Integer.parseInt(txtBrzaduzenja.getText())==knjizno_Zaduzenje.getBrojZaduzenja()){
            JOptionPane.showMessageDialog(this, "Vec postoji knjizno zaduzenje sa tim brojem! Morate uneti novi broj zaduzenja.");
            return;
            }
        }
        int br=Integer.parseInt(txtBrzaduzenja.getText());
        
        String mesto=txtMestoIzd.getText();
        String napomena=txtNapomena.getText();
        Radnik r=(Radnik) cmbRadnik.getSelectedItem();
        
        SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
        String di=txtDatumIzd.getText();
        Date dtmIzd=new Date();
        try {
            dtmIzd=sdf.parse(di);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Greska pri parsiranju datuma izdavanja knjiznog zaduzenja! Datum mora biti u formatu yyyy-MM-dd.");
        }
        
        
        Knjizno_Zaduzenje zad=new Knjizno_Zaduzenje(d, k, br, dtmIzd, mesto, napomena, "", r);
        Kontroler.getInstanca().insertWithAutoincrement(zad);
        JOptionPane.showMessageDialog(this, "Knjizno zaduzenje je uspesno dodato");
        parent.refreshTbl();
        this.setVisible(false);
        dispose();
    }

    private void update() throws Exception {
        if(txtDatumIzd.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Datum izdavanja je obavezno polje!");
            return;
        }
        //Dobavljac d=(Dobavljac) cmbDobavljac.getSelectedItem();
        //Kupac k=(Kupac) cmbKupac.getSelectedItem();
        int br=Integer.parseInt(txtBrzaduzenja.getText());
        String mesto=txtMestoIzd.getText();
        String napomena=txtNapomena.getText();
        Radnik r=(Radnik) cmbRadnik.getSelectedItem();
        
        SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
        String di=txtDatumIzd.getText();
        Date dtmIzd=new Date();
        try {
            dtmIzd=sdf.parse(di);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Greska pri parsiranju datuma izdavanja knjiznog zaduzenja! Datum mora biti u formatu yyyy-MM-dd.");
        }
        
        String naz=txtNazivDobavljaca.getText();
        
        Dobavljac d=kz.getDobavljac();
        Kupac k=kz.getKupac();
        
        Knjizno_Zaduzenje zad=new Knjizno_Zaduzenje(d, k, br, dtmIzd, mesto, napomena, naz, r);
        if(!naz.equalsIgnoreCase(kz.getNazivDobavljaca())){
            zad.setNazivDobIzmenjen(true);
        }
        
        
        Kontroler.getInstanca().update(zad);
        JOptionPane.showMessageDialog(this, "Knjizno zaduzenje je uspesno izmenjeno");
        parent.refreshTbl();
        this.setVisible(false);
        dispose();
    }
}
